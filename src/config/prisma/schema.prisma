// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Category    Category?     @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  // Review      Review[]
  Inventory   Inventory[]
  Supplier    Supplier?     @relation(fields: [supplierId], references: [id])
  supplierId  Int?
  // CartItem    CartItem[]
  Tags        Tags          @relation(fields: [tagsId], references: [id])
  tagsId      Int
  OrderDetail OrderDetail[]
}

model Order {
  id          Int           @id @default(autoincrement())
  productId   Int
  quantity    Int
  totalPrice  Float
  createdAt   DateTime      @default(now())
  orderDetail OrderDetail[]
  // Shipment    Shipment[]
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  productId Int
  Product   Product @relation(fields: [productId], references: [id])
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   Int?
}

// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   name      String?
//   password  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Review    Review[]
//   cart      cart[]
// }

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Tags {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Product Product[]
}

// model Review {
//   id        Int      @id @default(autoincrement())
//   productId Int
//   userId    Int
//   rating    Int
//   comment   String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   product Product @relation(fields: [productId], references: [id])
//   user    User    @relation(fields: [userId], references: [id])
// }

model Inventory {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
}

model Supplier {
  id        Int       @id @default(autoincrement())
  name      String
  contact   String?
  createdAt DateTime  @default(now())
  products  Product[]
}

// model Shipment {
//   id        Int       @id @default(autoincrement())
//   orderId   Int
//   status    String
//   shippedAt DateTime?
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt

//   order Order @relation(fields: [orderId], references: [id])
// }

// model cart {
//   id        Int      @id @default(autoincrement())
//   userId    Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user  User       @relation(fields: [userId], references: [id])
//   items CartItem[]
// }

// model CartItem {
//   id        Int      @id @default(autoincrement())
//   cartId    Int
//   productId Int
//   quantity  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   cart    cart    @relation(fields: [cartId], references: [id])
//   product Product @relation(fields: [productId], references: [id])
// }
